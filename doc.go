package algorithm

/*

数组在内存中是连续存放的（必须是连续的）。

链表中的元素可存储在内存的任何地方（可任意存放）。链表的每个元素都存储了下一个元素的地址，

从而使一系列随机的内存串在一起。

数组的元素都在一起。

链表的元素是分开的，其中每个元素都存储了下一个元素的地址。


数组的读取速度很快。

链表的插入和删除速度很快。

在同一个数组中，所有元素的类型都必须相同(都为int、double等)。

--------------------------------------------------------------------------------

如果使用循环，程序的性能可能更高；如果使用递归，程序可能更容易理解，如果选择要看什么对你来说更重要。

编写递归函数时，必须告诉它何时停止递归。

每个递归函数都有两部分：基线条件和递归条件。递归条件指的是函数自己调用自己，

而基线条件则指的是函数不再调用自己，从而避免形成无限循环。

递归指的是调用自己的函数

每个递归函数都有两个条件：基线条件和递归条件

栈有两种操作：压入和弹出

所有函数调用都进入调用栈

调用栈可能很长，这将占用大量的内存。

--------------------------------------------------------------------------------

分而治之

使用D&C解决问题的过程包括两个步骤：

（1）找出基线条件，这种条件必须尽可能简单

（2）不断将问题分解（或者说缩小规模），直到符合基线条件。



快速排序

 */